name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '45 21 * * 4'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      STAGE: TEST
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
      - uses: snok/install-poetry@v1
      - run: poetry lock --check
      - run: poetry install
      - run: poetry run pytest --cov src/service_template --cov-report term --cov-report html
      - run: poetry run black --check .
      - run: poetry run isort --check .
      - run: poetry run flake8
      - run: poetry run mypy src/service_template --strict --txt-report .mypy && cat .mypy/index.txt
      - run: sh check_contains_template.sh
  build_dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: snok/install-poetry@v1
      - run: poetry install --only main
      - run: cd src && poetry run zappa package dev -s ../zappa_settings.json -o ../dev_package.zip && cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: dev_package
          path: dev_package.zip
  deploy_dev:
    needs: [test, build_dev]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: snok/install-poetry@v1
      - run: poetry install --only main
      - uses: actions/download-artifact@v2
        with:
          name: dev_package
          path: dev_package # auto unzips :(
      - run: zip -r dev_package.zip dev_package
      - run: poetry run zappa update dev --zip dev_package.zip
  release:
    needs: [deploy_dev]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/download-artifact@v2
        with:
          name: dev_package
          path: dev_package # auto unzips :(
      - run: zip -r dev_package.zip dev_package
      - name: get-npm-version
        id: package-version
        run: |
          VERSION=$(python -c "import pkg_resources; print('.'.join(pkg_resources.get_distribution('service-template').version.split('.')[0:2]))")
          VERSION+=".${{ github.run_number }}"
          echo "package-version=$(echo $VERSION)" >> $GITHUB_OUTPUT
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dev_package.zip"
          name: Release ${{ steps.package-version.outputs.package-version }}
          tag: v${{ steps.package-version.outputs.package-version }}
